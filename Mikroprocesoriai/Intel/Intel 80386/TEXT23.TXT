──────────────────────────────────────
            СЕГМЕНТАЦИЯ
──────────────────────────────────────
Сегментация - один из способов  управ-
ления памятью.Сегментация  обеспечива-
ет основу  для защиты  памяти.Сегменты
используются для герметизации областей
памяти,которые  имеют  общие признаки.
Например: в сегменте могут  содержать-
ся  все  коды  заданной  программы или
постоянно  храниться  таблица операци-
онной системы.Вся информация о  сегме-
нтах хранится  в 8-байтовой  структуре
данных , называемой      ДЕСКРИПТОРОМ.
Все дескрипторы  в системе  содержать-
ся в таблицах,распознаваемых аппарату-
рой. /Про регистры дескрипторов упоми-
нается в  разделе БАЗОВАЯ  АРХИТЕКТУРА
подраздел ОПИСАНИЕ РЕГИСТРОВ/
──────────────────────────────────────
            ТЕРМИНОЛОГИЯ
──────────────────────────────────────
При  обсуждении   дескрипторов,уровней
привилегии и защиты будут  использова-
ться следующие термины:
 PL-уровень  привелегии,один  из четы-
рех иерархических уровней  привилегии.
Уровень 0 является самым  привилегиро-
ванным,а уровень 3 наименее привилеги-
рованным.Более привилегированные уров-
ни  по  числовому  значению больше,чем
менее привилегированные уровни.
 RPL-уровень   привилегии   инициатора
запроса(по запросу)  - уровень  приве-
легии оригинального поставщика  селек-
тора.RPL определяется самыми  наимень-
шими по  значению двумя  битами селек-
тора.
 DPL-уровень привилегии дескриптора  -
самый наименее привелегированный  уро-
вень на  котором задача  может выбрать
данный дескриптор и сегмент,соотнесен-
ный c этим дескриптором.DPL  определя-
ется битами 6:5 в байте доступа  деск-
риптора.
 CPL-текущий  уровень   привилегии   -
уровень  на  котором  в текущий момент
выполняется  программа,который  равня-
ется уровню привилегии сегмента  кода,
который  выполняется.CPL  может  также
определятся путем  изучения 2-х  самых
младших бит CS регистра,за  исключени-
ем согласования сегментов кода.
 EPL-эффективный      (исполнительный)
уровень привилегии - наименее привиле-
гированный,чем RPL и DPL.Поскольку ме-
ньшие значения привилегированных уров-
ней  подчеркивают  большую привилегию,
EPL  по  числовому  значению  является
максимальным по отношению к RPL и DPL.
──────────────────────────────────────
        ТАБЛИЦЫ ДЕСКРИПТОРА
──────────────────────────────────────
 Таблицы  дескриптора  определяют  все
сегменты,   которые   используются   в
80386.В 80386 имеются три типа таблиц,
которые  содержат  дескрипторы:Таблица
Глобального   Дескриптора(GDT),Таблица
Локального Дескриптора(LDT) и  Таблица
Дескриптора   Прерывания.Все   таблицы
представляют собой матрицы памяти  ра-
зличной длины,они могут занимать от  8
байт до 64 Кбайт.Каждая таблица  может
содержать  8192 8-байтовых  дескрипто-
ров.Верхние 13  бит селектора  исполь-
зуются как  индекс в  таблице дескрип-
тора.Таблицы имеют регистры,соотнесен-
ные с ними,которые содержат 32-битовый
линейный  базовый  адрес  и 16-битовый
предел каждой таблицы.
 Каждой  таблице соответствует регистр
GDTR,LDTR и IDTR.(Cмотрите рисунок.Для
вызыва нажмите клавишу <F10> ).
 Команды  LGDT,LLDT  и  LIDT загружают
базу и предел Таблиц Глобального,Лока-
льного и  прерывающего дескрипторов  в
соответствующий регистр.Команды  SGDT,
SLDT и SIDT cохраняют значения базы  и
предела в памяти.Эти таблицы обрабаты-
ваются операционной системой.Таким об-
разом,команды  загрузки  таблицы деск-
риптора  являются   привилегированными
командами.
──────────────────────────────────────
    ТАБЛИЦА ГЛОБАЛЬНОГО ДЕСКРИПТОРА
──────────────────────────────────────
 Таблица Глобального дескриптора (GDT)
содержит дескрипторы,которые  доступны
для всех задач в системе.GDT может со-
держать любой тип дескриптора  сегмен-
та,кроме   дескрипторов   используемых
для обслуживания прерываний (т.е. дес-
крипторы прерывания и ловушки ).Каждая
386  система  содержит  GDT.Обычно GDT
содержит код и сегменты данных исполь-
зуемые в операционных системах и  сег-
менты  состояния  задачи,и дескрипторы
для  LDT  в  системе.Первое гнездо GDT
соответствует нулевому селектору и  не
используется.Нулевой селектор  опреде-
ляет значение нулевого указателя.
──────────────────────────────────────
    ТАБЛИЦА ЛОКАЛЬНОГО ДЕСКРИПТОРА
──────────────────────────────────────
 Таблица Локального дескриптора  (LDT)
содержит  дескрипторы,которые  ассоци-
ируются (соотносятся) с заданной зада-
чей .Обычно,операционные системы  соз-
даются таким образом,чтобы каждая  за-
дача  имела  отдельную  LDT. LDT может
содержать только  код,данные,стек,вен-
тель(логический элемент) задачи и дес-
крипторы вентеля  вызова. Таблицы  LDT
обеспечивают механизм для изоляции ко-
да и  сегмента данных  заданной задачи
от  остальной  операционной  системы,в
то время как GDT содержит дескрипторы,
общие для всех задач. Задача не  может
получить  доступ  к  сегменту,если  ее
дескриптор  сегмента  не  существует в
одной  из  текущих  LDT  или  GDT. Это
обеспечивает  изоляцию  и  защиту  для
сегмента задачи,позволяя в то же время
разделение  глобальных  (всех)  данных
между задачами.В отличие от 6 байтовых
регистров GDT или IDT,которые содержат
базовый адрес  и предел,видимая  часть
регистра LDT содержит только  16-бито-
вый селектор. Данный селектор относит-
ся к LDT дескриптору в GDT.
──────────────────────────────────────
    ТАБЛИЦА ДЕСКРИПТОРА ПРЕРЫВАНИЯ
──────────────────────────────────────
 Таблицей необходимой для 80386  явля-
ется  IDT.  (Cмотрите  рисунок.Для вы-
зыва нажмите клавишу <F10> ). IDT  со-
держит  дескрипторы,которые  указывают
на  адреса  256  векторов  прерываний.
IDT может содержать только вентели за-
дач,вентили прерываний и вентили  ло-
вушек.  IDT  должен  ,по крайней мере,
быть не менее 256 байт,для  того,чтобы
фиксировать дескрипторы для 32 опреде-
ленных  прерываний.  Каждое прерывание
используемое  системой  должна   иметь
элемент  (вход)  в  IDT.  Элементы IDT
рассматриваются   посредством   команд
INT,векторами  внешних  прерываний  и
исключениями (смотри подраздел  ПРЕРЫ-
ВАНИЯ).
══════════════════════════════════════
             ДЕСКРИПТОРЫ
══════════════════════════════════════
    АТРИБУТИВНЫЕ БИТЫ ДЕСКРИПТОРА
──────────────────────────────────────
 Обьект на который указывает селектор,
называется  дескриптором.  Дескрипторы
являются 8-ми байтовыми величинами,ко-
торые  содержат  атрибуты(признаки)  о
заданной области пространства линейно-
го адреса (т.е. сегменте). Эти атрибу-
ты включают  32-битовый базовый  адрес
линейный адрес сегмента,20-бит длину и
степень  детализации  сегмента,уровень
защиты и привилегии  прочтения,написа-
ния  или  исполнения,размер  умолчания
операндов (16-бит  или 32-бита),и  тип
сегмента. Вся атрибутивная  информация
о  сегменте  содержится  в  12-битах в
дескрипторе  сегмента.Обычный   формат
дескриптора смотрите  на рисунке  (Для
вызыва нажмите клавишу <F10> ).
Все сегменты в  80386 имеют три  общих
атрибутивных поля: Р  бит,DPL бит и  S
бит. Бит Р "присутствие" равен  1,если
сегмент загружается  в физическую  па-
мять. Если Р=0,любые попытки  получить
доступ к сегменту вызывают  исключение
не присутствия (Исключение 2). Уровень
привилегии дескриптора DPL представля-
ет собой двух битовое поле,которое оп-
ределяет уровень защиты 0 -  3,соотне-
сенный  с  сегментом.  80386 имеет две
основные категории сегментов,системных
сегментов и несистемных сегментов (для
кода и данных).  Бит S сегмента  деск-
риптора  сегмента  определяет является
ли данный сегмент системным  сегментом
сегментом кода ,  или сегментом  дан-
ных.  Если  S=1,в  этом случае сегмент
является либо сегментом кода,либо сег-
ментом данных. Если S=0,значит сегмент
является системным.
──────────────────────────────────────
   386 КОД ДЕСКРИПТОРА ДАННЫХ (S=0)
──────────────────────────────────────
 На  рисунке(для  вызова  нажмите F10)
представлен общий формат кода дескрип-
тора данных,а на таблице(для вызова на-
жмите F9) показано как  интерпритируют
ся биты в  байте права доступа.В  сег-
менте кода и данных имеются  несколько
общих полей дескриптора.
Бит I устанавливается каждый раз,когда
процессор получает доступ к дескриптору.
Бит I используется операционными систе-
мами для поддержания статистики исполь-
зования сегмента.
Бит J или бит степени детализации  оп-
ределяет,является  ли  длина  сегмента
детализированной  по  байтам  или   по
странице.
 Сегменты 80386 могут быть в длину 1Мб
при  степени  детализации  байта,когда
J=0,или 4 Гбайта,при степени детализа-
ции страницы,когда J=1,т.е. 2 в степе-
ни 20 страниц и каждая страница 4 Кба-
йта  в  длину.Степень  детализации  не
имеет абсолютно не какого отношения  к
разбиению    памяти    на    страницы.
Система 80386  может состоять  из сег-
ментов со степенью детализации  байтов
или со степенью детализации страниц  в
не зависимости  от наличия  или отсут-
ствия  страничной  организации памяти.
Бит исполнения E указывает является ли
сегмент сегментом  кода или  сегментом
данных.Сегмент кода,когда Е=1,S=1  мо-
жет  быть  только  выполнен или только
прочитан,что  устанавливается  битом R
прочтения.Сегменты  кода   выполняются
только,если  R=0  и  считываются   при
R=1.
  ПРИМЕЧАНИЕ:
  Сегменты кода могут быть модифициро-
  ваны при помощи  псевдонимов.Псевдо-
  нимы представляют собой сегменты да-
  нных которые можно записать и  кото-
  рые занимают ту же область линейного
  адресного пространства,как и сегмент
  кода.
 Бит Р  указывает длину  умолчания для
операндов  и  исполнительных  адресов.
Если Р=1,значит используется 32  бито-
вые операнды и 32 битовые режимы адре-
сации.
 Если Р=0,то тогда используются 16 би-
товые операнды и 16 битовые режимы ад-
ресации.Таким образом все существующие
сегменты кода 286,будут работать в 386
считая,что бит Р=0.
 Другой признак сегментов кода опреде-
ляется битом С  подтверждения.Сегменты
подтверждения,когда  С=1  могут выпол-
нятся и  делиться программами  на раз-
личных   уровнях    привилегии.(Смотри
раздел ЗАЩИТА).
 Сегменты идентифицируются как сегмен-
ты  данных,если   Е=0,S=1,используются
для 2-х типов сегментов  80386,сегмент
стека и сегмент данных.
 Бит Е направления  расширения,опреде-
ляет в каком направлении  рассматрива-
ется  сегмент,вниз,т.е  сегмент  стека
или вверх сегмент данных.Если  сегмент
является сегментом стека,то все смеще-
ния должны быть больше,чем предел сег-
мента.
У сегментов данных все смещения должны
быть меньше или равны  пределу.Другими
словами  сегменты  стека  начинаются с
базового линейного адреса плюс  макси-
мальный предел и растут вниз к базово-
му линейному адресу плюс предел.С дру-
гой стороны сегменты данных начинаются
с базового линейного адреса и расширя-
ются к базовому линейному адресу  плюс
предел.
 Бит  W  признака  записи,контролирует
возможность записи в  сегмент.Сегменты
данных  только  читаются,если W=0.Cег-
мент стека должен иметь W=1.
 Бит  В  контолирует  размер  регистра
указателя на стек.Если В=1,то  команды
PUSH,POP,CALL используют 32-х  битовый
ISP регистр  для указателя  на стек  и
принимает  значение  верхнего  предела
FFFFFFFFH.Если В=0,то команды  исполь-
зующие стек  используют 16-ти  битовый
SP регистр и принимает размер верхнего
предела FFFFH.
──────────────────────────────────────
      ФОРМАТЫ ДЕСКРИПТОРА СИСТЕМЫ.
──────────────────────────────────────
 Сегменты  системы  описывают информа-
цию,касающиюся   таблиц   операционных
систем (ОС),задач и вентелей.На рисун-
ке представлен общий формат дескрипто-
ров сегментов системы и различных  ти-
пов сегментов систем.Дескрипторы  сис-
темы 80386 содержат 23-х битовый базо-
вый  линейный  адрес  и  20-ти битовый
предел сегмента.
 Дескрипторы системы 80286 имеют  24-х
битовый базовый линейный адрес и 16-ти
битовый  предел   сегмента.Дескрипторы
системы  80286  определяются  верхними
16-ю битами,которые все равны нулю.
──────────────────────────────────────
   ДЕСКРИПТОРЫ LDT (при S=0,TYPE=2)
──────────────────────────────────────
 Дескрипторы  LDT  при  S=0  и  TYPE=2
содержат информацию о локальной табли-
це  дескрипторов.LDT  содержат таблицу
дескрипторов сегмента,которые относят-
ся  только   к  определенной   задаче,
поскольку команда  загрузки LDTR  воз-
можна только  на уровне  привилегии 0.
Поле DPL игнорируется.
 Дескрипторы  LDT  возможны  только  в
глобальной таблице дескрипторов GDT.
──────────────────────────────────────
Дескрипторы TSS (при S=0,TYPE=1,3,8,B)
──────────────────────────────────────
 Дескрипторы  TSS  сегмента  состояния
задачи содержит  информацию о  положе-
нии,размере и  уровни привилегии  сег-
мента  состояния  задачи  (TSS).TSS  в
свою очередь является специальным фик-
сированным   сегментом   информатором,
который содержит всю информацию состо-
яния задачи и  поле связи для  возмож-
ности вложения задач.
 Поле TYPE используется для  определе-
ния,является ли задача текущей,то есть
в цепочке активных задач или имеется в
TSS.Поле TYPE также определяет  содер-
жит ли сегмент 286 или 386 TSS.Регистр
задания  TR  содержит селектор,который
указывает на  текущий сегмент  состоя-
ния задачи.
──────────────────────────────────────
ДЕСКРИПТОРЫ ВЕНТЕЛЕЙ (S=0,TYPE=4-7,CF)
──────────────────────────────────────
 Вентиль  используется  для управления
доступом  к  точкам  входа,в  пределах
сегмента кода,мишени,различными типами
дескрипторов вентиля является:
 1)Вентиль вызова;
 2)Вентиль задачи;
 3)Вентиль прерывания;
 4)Вентиль ловушки;
Вентиль обеспечивает уровень  индерек-
ции между источником и адресатом пере-
дачи управления.Данная индерекция поз-
воляет процессору автоматически выпол-
нять  проверки  защиты.Это  также дает
возможность системотехникам  управлять
точками входа в операционных системах.
 Вентили вызова используются для изме-
нения уровней привилегии.
 Вентили задачи используются для выпо-
лнения включения задачи,а вентили пре-
рывания  и  ловушки  используются  для
определения  процедуры   прерывания.На
рисунке представлен  формат 4-х  типов
дескрипторов вентилей.
 Вентиль вызова,преимущественно  испо-
льзуется для передачи управления прог-
раммой  на   более   привилегированный
уровень.
 Дескрипторы  вентилей  вызова состоят
из 3-х полей:
 Байта   доступа,длинного    указателя
селектора,который указывает на  начало
процедуры и еще слова,которое  опреде-
ляет какое  количество параметров  не-
обходимо скопировать из  стека,вызыва-
ющей программы в стек вызывающей  про-
цедуры.
 Поле WORD (поле счета слова) вентиля-
ми  вызова,когда  происходит  смена  в
привилегированном  уровне.Другие  типы
вентелей игнорируют поле  WORD.Вентели
прерывания и ловушки используют селек-
тор адресатор и поле смещения адресата
дескриптора вентиля,как указатель  на-
чало  процедуры  обработки  прерывания
или  ловушки.Различие  между вентилями
прерывания и ловушки состоит в том,что
вентиль прерывания делает  невозможным
прерывание:сбрасывает бит IF,в то вре-
мя как вентиль ловушки этого не проде-
лывает.Вентиль задачи используется для
включения задачи.Вентили задачи  могут
относиться только к сегменту состояния
задачи.(Смотри  подраздел   "Включение
задачи.").
 Таким образом только часть  селектора
адресата  дескриптора  вентиля  задачи
используется,а смещение адресата игно-
рируется.Исключение 13 вырабатывается,
когда  селектор  адресата  относится к
неправильному типу дескриптора,то есть
к сегменту  кода для  вентиля прерыва-
ния,ловушки или вызова,TSS для вентиля
задачи.
 Формат байта доступа является  одина-
ковым для всех дескрипторов вентиля.
 Р=1 указывает,что содержание  вентиля
является  истинным,Р=0   указывает,что
содержание не является истинным и  вы-
зывает исключение 11,если на его  ссы-
лаются.
 DPL-это уровень привилегии дескрипто-
ра и  он определяет,когда  данный дес-
криптор может  быть использован  зада-
чей.(смотри раздел "Защита").
 Бит 4 поля S байта права доступа дол-
жен быть равен 0,для обозначения деск-
риптора управления системой.

──────────────────────────────────────
           ПОЛЯ  СЕЛЕКТОРА
──────────────────────────────────────
 Селектор  в  Защищенном  режиме имеет
3 поля:
 1)Индикатор локальной или глобальной
  таблицы дескриптора TI.
 2)Индекс входа дескриптора.
 3)Уровень привилегии инициатора за-
   проса (селектора).
Как показано на рисунке.(Для вызова
нажми F10).
 Биты TI подбирают 1 или 2-е  основан-
ные  на  памяти  таблицы  дескрипторов
(глобальная  таблица  дескрипторов или
локальная таблица дескрипторов).Индекс
выбирает 1 из 8К дескрипторов в  соот-
ветствующей таблице  дескрипторов.Биты
RPL-уровня  привилегии  инициатора за-
проса.
 Позволяет высокоскоростное тестирова-
ние признаков привилегии селектора.
──────────────────────────────────────
       КШ-ДЕСКРИПТОРА СЕГМЕНТА
──────────────────────────────────────
 В  дополнение  к  значению  селектора
каждый регистр сегмента имеет  регистр
КШ дескриптора сегмента,который с  ним
соотносится.Каждый раз когда  значение
регистра сегмента изменяется,8-ми бай-
товый дескриптор соотнесенный с данным
селектором автоматически  загружается.
На ЧИП (кристалл) будучи единожды заг-
ружанным,все сноски к данному  сегмен-
ту,используют  загружанную  информацию
дескриптора,вместо повторного  доступа
к дескрипторам.
 Содержание КШ -- дескриптора является
невидимыми для  программиста.Поскольку
КШ-дескрипторы изменяются,только когда
изменяется  регистр  сегмента,то прог-
раммы,которые  изменяют таблицы  деск-
рипторов  должны  перезагружать  соот-
ветствующие  регистры   сегмента,после
изменения значения дескриптора.
──────────────────────────────────────
          УСТАНОВКА  РЕГИСТРА
         ДЕСКРИПТОРА  СЕГМЕНТА
──────────────────────────────────────
 Содержание в КШ-дескрипторах сегмента
изменяются  взависимости  от  режима в
котором  работает  80386.При  работе в
режиме реальной адресации  база,предел
и другие признаки сегмента,в  пределах
регистров    КШ-сегментов,определяются
как  показано  на  рисунке.(Для вызова
нажмите  клавишу  F10).Для   совмести-
мости с архитектурой 8086 база устана-
вливается  в  16  раз  больше текущего
значения селектора.Предел  фиксируется
на  0000FFFFН,а  признаки  фиксируются
так,чтобы показать,что сегмент присут-
ствует и полностью используется.
В режиме реальной адресации внутренний
уровень  всегда  фиксируется  на самый
высокий  уровень,поэтому  ввод/вывод и
другие операционные коды  привилегиро-
ваны и могут быть всегда ваполнены.
 При работе в Защищенном режиме  база,
предел  и  другие  признаки сегмента,в
пределах регистров  КШ-сегментов,опре-
деляются  как  показано  на   рисунке.
(Для вызова нажмите клавишу F9).В  За-
щищенном режиме  каждый из  данных по-
лей,определяется в соответствии с  со-
держанием дескриптора  сегмента,индек-
сированного значением селектора загру-
женного в регистр сегмента.
 При работе в Виртуальном режиме  8086
в  пределах  Защищенного  режима база,
предел  и  другие  признаки сегмента,в
пределах регистров  КШ-сегментов,опре-
деляются как показано на рисунке.
(Для вызова  нажмите клавишу  F10).Для
совместимости с архитектурой 8086 база
устанавливается в 16 раз больше  теку-
щего значения селектора.Предел  фикси-
руется на 0000FFFFН,а признаки  фикси-
руются так,чтобы показать,что  сегмент
присутствует и полностью используется.
 Виртуальная программа выполняется  на
самом низком уровне привилегии (уровне
3),с тем  чтобы позволить  организацию
ловушек всех его PL чувствительных ко-
манд  и  команд  которые   выполняются
только при уровни 0.
