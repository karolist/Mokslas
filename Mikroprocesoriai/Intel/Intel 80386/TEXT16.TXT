══════════════════════════════════════
──────────────────────────────────────
             ПРЕРЫВАНИЯ
──────────────────────────────────────
══════════════════════════════════════

       ПРЕРЫВАНИЯ И ИСКЛЮЧЕНИЯ

 Прерывания и  исключения(исключитель-
ные ситуации) изменяют нормальное  вы-
полнение задачи,чтобы обработать внеш-
ние  условия,сообщить  об  ошибках или
исключительных  обстоятельствах.Разли-
чия между прерываниями и  исключениями
состоят в том,что прерывания обрабаты-
вают асинхронные внешние условия,в  то
время  как   исключения   обрабатывают
ошибки команд.Хотя прерывание n  прог-
рамма  может   выполнить   посредством
команды INT n,процессор  рассматривает
прерывание за счет программного  обес-
печения как исключение.
 Прерывания,произведенные     машинным
оборудованием,происходят в  результате
внешних событий  и бывают  двух видов:
маскируемые и немаскируемые, и  выпол-
няются после выполнения текущей коман-
ды.После того, как программа обработки
прерываний  заканчивает   обслуживание
прерывания,выполнение  продолжается  с
команды,которая следует сразу за  ком-
мандой  прерывания.Различия  между ма-
скируемыми и немаскируемыми прерывани-
ями будут объяснены чуть попозже.
 Исключения классифицируются как ошиб-
ки,ловушки или (преждевременные)  пре-
кращения в  зависимости от  способа их
сообщения и от того,поддерживается  ли
перезапуск  команды,вызывающей  исклю-
чение.ОШИБКИ-  это  исключения,которые
обнаруживаются и выполняются до выпол-
нения команды  с ошибкой.ОШИБКА  будет
происходить в системе виртуальной  па-
мяти,когда  процессор   ссылается   на
страницу или сегмент, которые отсутст-
вуют.Операционная   система    выберет
страницу  или  сегмент  с  диска,после
чего 80386 перезапустит команду.ЛОВУШ-
КИ-  исключения,о  которых  сообщается
немедленно после  выполнения той  про-
граммы,которая  вызывает   исключение.
ПРЕКРАЩЕНИЯ-   исключения,которые   не
позволяют определить точно  местополо-
жение команды, вызывающий  исключение.
ПРЕКРАЩЕНИЯ используются для сообщения
о грубых ошибках,таких как  аппаратная
ошибка,неправильные значения в систем-
ных таблицах.
 Таким образом, когда программа обслу-
живания  прерывания  заканчивается,вы-
полнение  продолжается  с команды,сле-
дующей  сразу  за  командой  вызвавшей
прервание.С другой стороны,адрес возв-
рата  из  программы  ОШИБКИ исключения
всегда укажет  на команду,которая  вы-
зывает исключение,  и будет  содержать
любой из префиксов ведущей  программы.
В таблицу сведены все возможные преры-
вания для 80386 и показано куда указы-
вает адрес возврата.
 80386  способен  обрабатывать  до 256
различных    прерываний/исключений.Для
обслуживания     прерываний,необходимо
определить(составить)  таблицу  с  256
векторами прерываний.Вектора  прерыва-
ний- это указатели на  соответствующие
программы обслуживания;в РЕАЛЬНОМ  РЕ-
ЖИМЕ  векторы  представляют  собой 4-х
байтные  величины:  сегмент  кода плюс
16-ть бит смещения;в ЗАЩИЩЕННОМ РЕЖИМЕ
векторы прерывыний являются 8-ми  бай-
товыми  величинами,которые  помещены в
ТАБЛИЦУ  ДЕСКРИПТОРОВ  ПРЕРЫВАНИЙ.(для
получения  более  подробной информации
смотри соответствующие разделы:
в РЕАЛЬНОМ и ЗАЩИЩЕННОМ режимах)
 Из 256 возможных прерываний,32  заре-
зервированы  для  использования INTEL,
оставшиеся 224 свободны для  использо-
вания пользователем.
 ДЛЯ ПРОСМОТРА ТАБЛИЦЫ ВЕКТОРОВ ПРЕРЫ-
ВАНИЙ НАЖМИТЕ КЛАВИШУ <F10.>
──────────────────────────────────────
        ОБРАБОТКА ПРЕРЫВАНИЙ
──────────────────────────────────────
 Когда происходит  прерывание,происхо-
дят  следующие  действия.Во-первых,ад-
рес текущей  команды и  регистр флагов
EFLAGS сохраняются в стеке,что  позво-
ляет возобновить прерванную программу.
Затем,80386  снабжается  8-ми  битовым
вектором,который определяет соответст-
вующий элемент в таблице  прерываний.В
таблице  содержиться  начальный  адрес
программы  обработки  прерываний.После
этого,выполняется вызываемая программа
обработки.И наконец,после команды IRET
восстанавливается   старое   состояние
процессора и  по адресу  возврата(т.е.
по адресу сохраненному в стеке) возоб-
новляется выполнение программы.
 8-ми битовый вектор прерывания  пода-
ется на  80386 несколькими  различными
способами:исключения "поставляют" век-
тор  прерывания  внутренне;команды INT
содержат или  включают в  себя вектор;
прерывания   маскируемые   аппаратурой
"поставляют" 8-ми битовый вектор через
последовательность шины  подтверждения
прерываний.Прерывания    немаскируемые
аппаратурой присвоены к вектору преры-
вания 2.
──────────────────────────────────────
       МАСКИРУЕМЫЕ ПРЕРЫВАНИЯ
──────────────────────────────────────
 Маскируемые прерывания- наиболее  об-
щий способ,используемый 80386 для  от-
вета  на  асинхронные  внешние события
аппаратуры.Аппаратное прерывание  про-
исходит,когда бит IF флага  прерываний
разблокирован(установлен в  1) и  INTR
выталкивается высоко.Процессор  реаги-
рует на маскируемые прерывания  только
между выполнением команд.Строковые ко-
манды  имеют  "окна  прерываний" между
перемещениями  памяти,что  делает воз-
можным прерывание  во время  обработки
длинной строки.Когда происходит преры-
вание,процессор считывает 8-ми битовый
вектор,присылаемый аппаратурой,который
определяет  источник  прерывания.(один
из  224   определяемых   пользователем
прерываний).
 Точная   природа   последовательности
прерываний описана  в разделе  ФУНКЦИ-
ОНАЛЬНЫЕ ДАННЫЕ.
 БитIF в регистре EFLAGS сбрасывается,
когда   обслуживается   прерывание,Это
позволяет эффективно предотвратить до-
полнительных прерываний во время обра-
ботки обслуживания  прерываний.Однако,
IF может быть установлен  обработчиком
прерываний,чтобы  позволить   вложение
прерываний.Когда команда IRET выполне-
на,восстанавливается начальное состоя-
ние флагов, значит и бита IF.
──────────────────────────────────────
       НЕМАСКИРУЕМЫЕ ПРЕРЫВАНИЯ
──────────────────────────────────────
 Немаскируемые прерывания обеспечивают
обслуживание прерываний очень высокого
уровня.Одним из общих примеров  немас-
кируемых ( NMI ) прерываний может слу-
жить прерывание по сбою  питания.Когда
активизируется контакт  NMI,происходит
прерывание по  вектору 2.В  отличие от
обычных прерываний,для  NMI не  выпол-
няется   последовательность   подтвер-
ждения приема прерывания.
 Во время процедуры обслуживания  NMI,
80386 не будет обслуживать ни дальней-
ший запрос  NMI,ни запросы  INT,до тех
пор,пока  не  будет  выполнена команда
возврата  из  прерывания  (IRET)   или
пока процессор  не будет  сброшен.Если
NMI произойдет  во время  обслуживания
NMI,его(прерывания) присутствие  будет
сохранено для обработки после обработ-
ки текущего  NMI,т.е. после  первой же
команды IRET.Бит IF очищается в начале
NMI дла блокировки дальнейших INTR ко-
манд.
──────────────────────────────────────
        ПРОГРАММНЫЕ ПРЕРЫВАНИЯ
──────────────────────────────────────
 Третьим типом  прерывыаний/исключений
для 80386 являются программные  преры-
вания.Команда INT n заставляет процес-
сор выполнять программу  обслуживания,
на которую указывает вектор n в табли-
це прерываний.
 Особым случаем двухбайтового програм-
много прерывания INT с номером n явля-
ется однобайтовое прерывание INT 3,или
прерывание останова.Путем ввода данной
однобайтовой команды в программу,поль-
зователь имеет возможность устанавли-
вать точки останова в свою программу,
как инструмент отладки.
 Последним типом программного прерыва-
ния является прерывание пошагового ре-
жима.Оно обсуждается в разделе "ОТЛАД-
КА".
──────────────────────────────────────
       ПРИОРИТЕТНОСТЬ ПРИРЫВАНИЙ
──────────────────────────────────────
 Поскольку   прерывания   распознаются
только на границах команд,возможно,что
большее число прерываний,чем  одно,мо-
жет быть активным в одно и тоже время.
В случае одновременных  прерываний,они
будут обрабатываться согласно  приори-
тету,представленному в таблице.ПРИМЕР:
заданная  команда  вызывает  системное
прерывание отладки и исключение  "сег-
мент отсутствует".80386  первоначально
отреагирует на исключение "сегмент от-
сутствует"(11),предпринимая    попытку
активизировать  обработчик  исключения
11.Программа  обработки  исключения 11
будет прервана,в результате чего адрес
обработчика исключения 11 будет сохра-
нен в  стеке.После этого  будет вызван
обработчик отлатдки и управление снова
возвратится оброботчику  исключения11.
Это  позволяет  системотехнику отлажи-
вать свои обработчики исключений.
──────────────────────────────────────
          ПОВТОРНЫЙ ЗАПУСК
──────────────────────────────────────
 80386 полностью поддерживает возобно-
вление всех команд после ошибок.Опера-
ционная  система  не  участвует в про-
цессе перезапуска,поскольку  процессор
сообщит об ошибке сегмента или страни-
цы при таком состоянии  машины,которое
позволяет перезапуск ошибочной команды
после того,как  обработчик ошибки  ис-
правил ошибочное условие(например,ког-
да вырабатывается ошибка  страницы,об-
работчик дает правильную страницу).
 Повторный запуск команды гарантирует-
ся за исключением двух условий:
1)если команды вызывают включение  за-
  дачи  в  СЕГМЕНТ  СОСТОЯНИЯ  ТЕКУЩЕЙ
  ЗАДАЧИ,который  расположен  в отсут-
  ствующей странице.
2)если  один  из  операндов расположен
  ниже  любого  из  текущих указателей
  стека,т.е.  по  адресу  памяти мень-
  шем,чем  вершина  стека.Или  операнд
  в форме сплавающей точкой  совершает
  циклический переход в памяти.
──────────────────────────────────────
           ДВОЙНЫЕ ОШИБКИ
──────────────────────────────────────
 Двойная ошибка происходит,когда  про-
цессор пытается обработать  исключение
и получает другое исключение во  время
программы обработки.Двойная ошибка вы-
зывает исключение 8.Большинство исклю-
чений в 80386 не считают в направлении
условия двойной ошибки,т.е. при их об-
работке не  возникают двойные  ошибки.
Это следующие исключения(типы 1,2,3,4,
5,6,7,9,14 и  16).Только ошибки  из-за
деления(прерывание 0) и сегментные ис-
ключения(10,11,12,13) считают в напра-
влении  двойной  ошибки.Таким образом,
получение  исключения  "сегмент отсут-
ствует" во время обработки  исключения
отладки не приведет к двойной  ошибке.
В то время,как ошибка  сегмента,проис-
ходящая во время обработки ошибки  из-
за деления на нуль,приведет к  двойной
ошибке.
 Прерывание из-за отсутствия  страницы
(в  оперативной  памяти)  не считает в
направлении  двойных  ошибок.Например,
если  команда  вызывает  и  исключение
"сегмент отсутствует"(11),и прерывание
из-за отсутствия  страницы,(прерывание
14),оба  прерывания  будут   правильно
обработаны.Обработчик  исключения"сег-
мент отсутствует" будет активизирован,
в результате чего с диска будет загру-
жен  правильный  сегмент.Затем команда
будет повторно запущена,и вызовет пре-
рывание  из-за  отсутствия   страницы.
Тогда обработчик прерывания из-за  от-
сутствия  страницы  подаст  правильную
страницу и выполнение программы  будет
продолжено.Это поддерживает  концепцию
нахождения   страничной    организации
"под" сегментацией.
 Последней  причиной  двойных   ошибок
являются рекурсивные ошибки  (например
отсутствует обработчик прерывания  из-
за отсутствия страницы).Это приводит к
исключению 8.











-
