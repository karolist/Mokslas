══════════════════════════════════════
           ТЕСТИРУЕМОСТЬ
──────────────────────────────────────
           САМОКОНТРОЛЬ
──────────────────────────────────────
 80386 имеет возможность выполнять са-
моконтроль.Самоконтроль проверяет фун-
кцию всех  КОНТРОЛЬ ПЗУ  и большинство
нерегулярной логики части машины.Приб-
лизительно  половина   микропроцессора
может быть проверена во время самокон-
троля.Самоконтроль  в  80386,иницииру-
ется,когда происходит  переход от  вы-
сокого  сигнала  к  низкому  на выводе
СБРОС,и на выводе BUSY низкий  сигнал.
Самоконтроль  занимает  приблизительно
30 миллисекунд с 16 MHZ80386.После за-
вершения самоконтроля процессор выпол-
няет сброс и начинает обычную  работу.
Элемент  считается  успешно  прошедшим
контроль,если содержимое EAX и EDX ре-
гистров равно 0.Если содержимое EAX  и
EDX отлично от нуля,значит в  процессе
самоконтроля  был  обнаружен  дефект в
детали.
──────────────────────────────────────
        ТЕСТИРОВАНИЕ БУФЕРА
    ПРЕДЫСТОРИИ ТРАНСЛЯЦИИ(TLB)
──────────────────────────────────────
 80386 имеет  также механизм  для кон-
троля  Буфера  Предыстории  Трансляции
(TLB)(смотри раздел БУФЕР  ПРЕДЫСТОРИИ
ТРАНСЛЯЦИИ).Эта возможность  микропро-
цессора  пригодится  в  первую очередь
тем,кто хочет написать тестовые  прог-
раммы для 80386.Тестирование TLB явля-
ется уникальным свойством 80386 и  мо-
жет быть в дальнейшей не  использовано
в будущих процессорах.Тестирование TLB
требует использования тестера и  прог-
раммы на  языке ассемблера  для приве-
дения действия модели теста.Страничная
организация памяти должна быть  блоки-
рована  для  тестирования функциональ-
ности TLB.
 Два тестовых  регистра (смотри  рису-
нок)обеспечиваются средствами  написа-
ния образца в TLB и считываним резуль-
тата.TR6  является  регистром тестовых
команд,а  TR7-  регистром  контрольных
данных.На рисунке представлены два те-
стовых регистра.
 Тестовые регистры позволяют проводить
два вида операций с TLB: НАПИШИ  НОВЫЙ
TLB ВВОД и ВЫПОЛНИ ПОИСК TLB.Запись  в
регистр  тестовой  команды посредством
MOV TR0,(РЕГИСТР)   команд приводит  к
выполнению  операции  TLB.Если  бит  0
равен 1,будет выполняться ПОИСК TLB.
──────────────────────────────────────
          ОБЕСПЕЧЕНИЕ ОТЛАДКИ
──────────────────────────────────────
 80386 имеет несколько свойств,которые
упрощают  процесс  отладки.Большинство
этих  свойств  предназначены  в первую
очередь для программной отладки.(Обра-
тите внимание: INTEL обеспечит  полный
набор  инструментов  отладки,таких как
ICE-386(Внутрисхемная   эмуляция)    и
PTM-386 (  Просмотровый монитор  ) для
завершения построения отладочных приз-
наков.
 Тремя  основными  типами  средств  отладки,выполненных на кристале,являются
точки остановки программного  обеспечения,пошаговый режим работы  и регистры
отладки.Однобайтовое прерывание INT 3 используется отладчиками  программного
обеспечения для реализации точек останова.Отладчику следует ввести INT 3 ко-
манды в кодовые последовательности.
 После того,как команда INT  3 введена и опознана,выполнение  продолжится на
обработчике прерывания 3.Одноступенчатое прерывание достигается путем  уста-
новки бита(TF) в регистре EFLAGS.TF бит устанавливается путем измения образа
регистра флагов в стеке и выполнения команды POPF или IRET.После установки















бита TF одноступенчатое прерывание произойдет после выполнения следующей ко-
манды.Команда прерывания поместит в стек текущий флаговый регистр(с установ-
ленным битомTF),а затем очистит этот бит ( обеспечивая возможность  нормаль-
ного выполнения  программы обработки  одноступенчатого прерывания).Это  дает
возможность создать обработчик прерывания,который может совершать  ступенча-
тые  движения  внутри  команды.Одноступенчатое  прерывание использует вектор
прерывания 1,который поставляется процессору внутренне.После завешения прог-
раммы обработки одноступенчатого  прерывания,команда IRET извлечет  флаговый
регистр из стека и передаст управление следующей команде,которая тоже будет















разбита на ступенчатые шаги. Регистры отладки являются специфической особен-
ностью 80386.Регистры отладки,доступные для шести программ,дают  возможность
определить до четырех различных точек останова.В отличие от традиционных то-
чек останова,которые поддерживают только команды вызова  прерываний,регистры
отладки 80386 позволяют устанавливать  точки останова для доступа  к данным.
Таким образом,если переменная величина случайно перезаписана(или произведено
наложение),точка останова может  быть устоновлена для  того,чтобы остановить
выполнение,независимо от того,когда будет ли изменено значение данной  пере-
менной.На рисунке представлены Регистры Отладки более подробно.DR0-3 содер-















жит линейный адрес точки прерывания.
ССЫЛКА(к рисунку):
 Линейный адрес может не соответствовать физическому адресу,если разблокиро-
вана постраничная организация памяти.DR-6 содержит состояние регистров точек
останова.Биты в регистрах  имеют следующие значения:бит  BT:устанавливается,
если происходит включение  задачи в задачу,где  TSS имеет установленный  бит
ЛОВУШКИ ОТЛАДКИ; бит BS:разрешает обработчикам отладки различать одноступен-
чатые ловушки от других условий отладки; бит BD:устанавливается аппаратурой,
если следующая команда получает доступ к регистру отладки; биты B0-B3:эти















биты устанавливаются,если произошло прерывание ограниченного использования.
В0 устанавливается,если произошло прерывание 0(точка останова) и т.д.
────────────────────────────────────────────────────────────────────────────
 DR7-Регистр Управления Отладкой.Он используется для разрешения или  уточне-
ния различных точек останова.Биты имеют следующие назначения:LEN-это двухби-
товое поле,которая  определяет длину  прерывания.Все прерывания  должны быть
выравнены:2-х байтовые векторы должны  быть выравнены по границам  СЛОВА;4-х
байтовые по границе двойных слов.00=длина  в один байт,01=длина в один  байт
10=неопределена,11=длина в четыре байта.















(cмотри рисунок).
RWE:это  двухбитовое  поле  определяет
 тип выборки из памяти,которая  должна
 произойти с тем,чтобы  активизировать
 обработку прерывания.
GE/LE- Глобальная  и Локальная  Верные
 Точки   Останова:эти   биты    должны
 быть  всегда  установлены  на  1  при
 использовании прераваний.
Gi/Li- Разблокировка Глобальной и  Ло-
 кальной Точек Останова:если либо Gi=1
 либо  Li=1,в  этом  случае прерывания
 разблокируются.Если эти биты установ-
 лены,то любое прерывание ограниченно-
 го использования(т.е. точка останова,
 которая соответствует  условиям,опре-
 деленным битами LWE)заставит  процес-
 сор выполнять программу обработки от-
 ладки.Биты Li позволяют устанавливать
 локальные точки останова для  индиви-
 дуальной задачи,но при этом не оказы-
 вая влияния на другую задачу.Gi  биты
 позволяют  устанавливать  прерывания,
 воздействующие на все задачи.
──────────────────────────────────────
 Для того,чтобы установить точку оста-
нова,микропроцессор должен работать на
0 уровне привилегий,в Реальном режиме.
Затем,точка останова должна быть уста-
новлена путем загрузки регистра  точки
прерывания(посредством  MOV  DRi,(опе-
ранд в  памяти или  регистре) команды)
с адресом точки останова.Затем  должны
быть установлены,соответствующий LEN и
RWE.И наконец,биты разблокировки точки
прерывания  Gi  и/или  Li также должны
быть установлены.
 ССЫЛКА:
 Биты Bi  в DR6  всегда покажут  любую
точку останова ограниченного использо-
вания; но  до тех  пор, пока  не будут
установлены Gi или Li,процессор не бу-
дет выполнять программу отладки с эти-
ми прерываниями.



.
