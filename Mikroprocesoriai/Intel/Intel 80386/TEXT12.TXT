═══════════════════════════════════════════════════════════════════════════
───────────────────────────────────────────────────────────────────────────
                         ОБЗОР РЕЖИМОВ АДРЕСАЦИИ
═══════════════════════════════════════════════════════════════════════════
 Микропроцессор INTEL 80386 обеспечивает всего 11 режимов адресации  перехо-
дов и данных.Режимы  адресации оптимизированны,чтобы обеспечить  эффективную
работу с такими языками высокого уровня,как СИ и ФОРТРАН,кроме того,они  ох-
ватывают огромное множество ссылок даных,которые необходимы для языков высо-
кого уровня.















═══════════════════════════════════════════════════════════════════════════
                     РЕГИСТРОВЫЙ И НЕПОСРЕДСТВЕННЫЙ РЕЖИМ
═══════════════════════════════════════════════════════════════════════════
 Два режима адресации обеспечивают команды, которые используют регистровые и
непосредственные операнды:
 РЕГИСТРОВЫЙ РЕЖИМ АДРЕСАЦИИ  : операнд расположен в одном из 8-ми,16-ти,или
32-х разрядном регистре общего назначения.
 РЕЖИМ НЕПОСРЕДСТВЕННОГО ОПЕРАНДА: операнд включен в команду как часть опера
ционного кода.















═══════════════════════════════════════════════════════════════════════════
                          РЕЖИМЫ АДРЕСАЦИИ ПАМЯТИ.
═══════════════════════════════════════════════════════════════════════════
 Оставшиеся 9 режимов обеспечивают механизм  для определения  исполнительно-
го адреса операнда.Линейный адрес состоит из двух компонентов:сегментного ба
зового адреса и исполнительного адреса.Исполнительный адрес вычисляется пу-
тем сложения любой комбинации следующих четырех адресных элементов:
 СМЕЩЕНИЕ:8-,или 32-бит непосредственного значения,которое следует за коман-
дой.(16-бит смещения могут быть использованы перед командой с адресным пре-















фиксом.)
 БАЗА:содержание любого из регистров общего назначения.Базовые регистры обы-
чно используются компилятором для указания начала локальной изменяющейся об-
ласти.
 ИНДЕКС:содержание любого из регистров общего назначения,кроме ESP.Индексные
регистры используются для доступа к элементам массивов или цепочки символов.
 МАСШТАБ : значение индексного  регистра может быть умножено  на коэффициент
масштаба 1,2,4, или 8.Режим масштабного индекса особенно полезен для доступа
массивам структур.
















Комбинации этих  четырех компонент  составляют 9  дополнительных режимов ад-
ресации.При использовании  любой из  этих адресных  комбинаций не происходит
ухудшения рабочих характеристик,поскольку вычисление исполнительного  адреса
передается по конвейеру с выполнением других команд.Единственным  исключени-
ем является одновременное использование компонентов БАЗЫ,ИНДЕКСА и СМЕЩЕНИЯ,
что требует дополнительного машинного такта ( цикла ожидания).
 Как показанно на рисунке,исполнительный адрес(EA) операнда вычисляется по
следующей формуле:















 EA=Базовый регистр+(Индексный  регистр умноженный  на Масштабный  коэффици-
ент)+Смещение.

 ПРЯМОЙ режим: Адрес  операнда содержится как  часть команды в  виде 8-,16-,
или 32-бит смещения.
 ПРИМЕР: INC WORD PTR[500]

 РЕГИСТРОВЫЙ КОСВЕННЫЙ режим: Базовый  или Индексный регистр содержит  адрес
операнда.















ПРИМЕР: MOV [ECX],EDX

 БАЗОВЫЙ ОТНОСИТЕЛЬНЫЙ: Содержание Базового регистра добавляется к смещению
для формирования EA.
ПРИМЕР: MOV ECX[EAX+4],EDX

 ИНДЕКСНЫЙ  режим:  содержание  Индексного  регистра  добавляется к смещению
ПРИМЕР: MOV EAX,TABLE[ESI]
















 МАСШТАБНЫЙ  ИНДЕКСНЫЙ  режим:содержание  Индексного  регистра умножается на
Масштабный коэффициент,который добавляется к смещению.

ПРИМЕР:IMUL EBX,TABLE[ESI х 4],7

 БАЗОВЫЙ ИНДЕКСНЫЙ режим: содержание  Базового регистра складывается   с со-
держимым Индексного регистра.

ПРИМЕР: MOV EAX,[ESI][EBX]















 БАЗОВЫЙ ИНДЕКСНЫЙ МАСШТАБНЫЙ режим:содержание Индексного регистра умножает-
ся на коэффициент масштаба и  результат прибавляется  к содержанию  Базового
регистра.
ПРИМЕР: MOV ECX,[ESI*8][EAX]

БАЗОВЫЙ ИНДЕКСНЫЙ режим СО СМЕЩЕНИЕМ:содержание Базового регистра  складыва-
ется  с содержимым Индексного регистра и со смещением операнда для  формиро-
вания EA.
ПРИМЕР: ADD EDX,[ESI][EBP+00FFFFF0h]
















 БАЗОВЫЙ ИНДЕКСНЫЙ МАСШТАБНЫЙ режим СО СМЕЩЕНИЕМ :содержание Индексного  ре-
гистра умножается на коэффициент масштаба и результат прибавляется  к содер-
жанию Базового регистра,просуммированным со смещением.

ПРИМЕР:
 MOV EAX,LOCAL TABLE[EDI*4][EBP+87]

═══════════════════════════════════════════════════════════════════════════
















═══════════════════════════════════════════════════════════════════════════
                РАЗЛИЧИЯ МЕЖДУ 16- И 32-х РАЗРЯДНЫМИ АДРЕСАМИ.
═══════════════════════════════════════════════════════════════════════════
С целью обеспечения совместимости с программами 8086 и 80286,80386 может вы-
полнять 16-ти битовые команды в РЕАЛЬНОМ и ЗАЩИЩЕННОМ режимах.Микропроцессор
определяет размер выполняемой команды,анализируя бит D в дескрипторе сегмен-
та.Если D=0,тогда длина всех операндов и исполнительных адресов  принимается
как 16-ть бит.Если же D=1,тогда длина по умолчанию для операндов и адресов















будет 32-бит.В реальном режиме размер операндов и адресов по умолчанию будет
16-ть бит.
 Независимо от определенной по умолчанию длины операндов 80386 способен  вы-
полнять как  16-ти,так и  32-х битовые  команды.Это достигается  посредством
префикса отмены.Два префикса:ПРЕФИКС РАЗМЕРА ОПЕРАНДА и ПРЕФИКС ДЛИНЫ АДРЕСА
отменяют значения бита D на основе заданных в самой команде  значении.Данные
префиксы автоматически добавляются ассемблерами INTEL.
ПРИМЕР: Процессор работает в РЕАЛЬНОМ РЕЖИМЕ и программисту необходимо полу-
чить доступ к регистру EAX.Команда ассемблера для этого может быть такой















MOV EAX,32bitMEMORYOP(32-х разрядный операнд в памяти). ASM 386 автоматичес-
ки определяет,что необходим ПРЕФИКС РАЗМЕРА ОПЕРАНДА и вырабатывает его.                                    ПРИМЕР: Бит D=0,и программист хочет     *
использовать  МАСШТАБНЫЙ ИНДЕКСНЫЙ режим адресации,чтобы получить доступ к
массиву.ПРЕФИКС ДЛИНЫ АДРЕСА позволяет использовать MOV DX,TABLE[ESI*2].
Ассемблер использует ПРЕФИКС ДЛИНЫ АДРЕСА,поскольку при D=0,по умолчанию
используются 16-ти битовые адреса.
ПРИМЕР: Бит D=1,и программист хочет поместить в память 16-ти разрядную вели-
чину.ПРЕФИКС ДЛИНЫ  ОПЕРАНДА используется  для определения  только 16-ти бит
значения:MOV 16-бит памяти,DX.















 ПРЕФИКСЫ ДЛИНЫ ОПЕРАНДА  и ДЛИНЫ АДРЕСА  могут применяться к  любой команде
раздельно или в комбинации.ПРЕФИКС ДЛИНЫ АДРЕСА не позволяет в РЕАЛЬНОМ  РЕ-
ЖИМЕ доступ к  адресам более 64Кбайт.Исполнительный  адрес,превышающий FFFFh
приведет к  ОБЩЕЙ ОШИБКЕ  ЗАЩИТЫ.Он позволяет  только использовать  дополни-
тельные режимы адресации 80386.При работе с 32-х битовым кодом,80386 исполь-
зует или 8-,или 32-бит смещение,и любой регистр может быть использован в ка-
честве базового или индексного.При работе с 16-ти битовым кодом,смещения со-
ставляют 8- или  16-ть бит и  базовый и индексный  регистры используются как
и в микропроцессоре 80286.














*
